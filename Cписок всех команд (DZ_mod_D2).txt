	Запуск Django shell.

python3 manage.py shell

	1 Создать двух пользователей 
	(с помощью метода User.objects.create_user('username')).

from django.contrib.auth.models import User

user1 = User.objects.create_user('username1')
user2 = User.objects.create_user('username2')

	2 Создать два объекта модели Author, связанные с пользователями.

from news.models import Author

author1 = Author.objects.create(user=user1)
author2 = Author.objects.create(user=user2)

	3 Добавить 4 категории в модель Category.

from news.models import Category

category1 = Category.objects.create(name='Category 1')
category2 = Category.objects.create(name='Category 2')
category3 = Category.objects.create(name='Category 3')
category4 = Category.objects.create(name='Category 4')

	4 Добавить 2 статьи и 1 новость.

from news.models import Post

post1 = Post.objects.create(title='Post 1', content='Content 1', author=author1)
post2 = Post.objects.create(title='Post 2', content='Content 2', author=author2)
News1 = Post.objects.create(title='News 1', content='Content 3', author=author2)

	5 Присвоить им категории (как минимум в одной статье/новости должно быть 
	не меньше 2 категорий).

post1.categories.add(category1, category2)
post2.categories.add(category3)
News1.categories.add(category4, category3)

	6 Создать как минимум 4 комментария к разным объектам модели Post 
	(в каждом объекте должен быть как минимум один комментарий).

from news.models import Comment
comment1 = Comment.objects.create(post=post1, user=user1, text='Comment 1')
comment2 = Comment.objects.create(post=post2, user=user2, text='Comment for the sake of comment')
comment3 = Comment.objects.create(post=post2, user=user1, text='Comment 3')
comment4 = Comment.objects.create(post=News1, user=user2, text='Комментарий 4')

	7 Применяя функции like() и dislike() к статьям/новостям и комментариям, 
	скорректировать рейтинги этих объектов.

post1.like()
post2.dislike()
News1.like()
comment1.like()
comment1.like()
comment2.dislike()
comment3.like()
comment4.like()

	8 Обновить рейтинги пользователей.



	9 Вывести username и рейтинг лучшего пользователя 
	(применяя сортировку и возвращая поля первого объекта).



	10 Вывести дату добавления, username автора, рейтинг, заголовок 
	и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.


